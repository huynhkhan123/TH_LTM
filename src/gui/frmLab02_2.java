/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class frmLab02_2 extends javax.swing.JFrame {

    /**
     * Creates new form frmLab02_2
     */
    public frmLab02_2() {
        initComponents();
    }

    public frmLab02_2(int control) {
        initComponents();
        this.setLocationRelativeTo(null);
        switch (control) {
            case 0: {
                btnWriteBinary.setEnabled(false);
                btnWriteText.setEnabled(false);
                break;
            }
            case 1: {
                btnReadBinary.setEnabled(false);
                btnReadText.setEnabled(false);
            }
            case 2: {
                break;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtPath = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtString = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtText = new javax.swing.JTextArea();
        btnReadBinary = new javax.swing.JButton();
        btnWriteBinary = new javax.swing.JButton();
        btnReadText = new javax.swing.JButton();
        btnWriteText = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("path:");

        jLabel2.setText("string:");

        txtText.setColumns(20);
        txtText.setRows(5);
        jScrollPane1.setViewportView(txtText);

        btnReadBinary.setText("read file binary");
        btnReadBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadBinaryActionPerformed(evt);
            }
        });

        btnWriteBinary.setText("write file binary");
        btnWriteBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWriteBinaryActionPerformed(evt);
            }
        });

        btnReadText.setText("read file text");
        btnReadText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadTextActionPerformed(evt);
            }
        });

        btnWriteText.setText("write file text");
        btnWriteText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWriteTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnReadBinary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReadText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(121, 121, 121)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnWriteBinary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnWriteText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPath)
                            .addComponent(txtString, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtString, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReadBinary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnWriteBinary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReadText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnWriteText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReadBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadBinaryActionPerformed
        // TODO add your handling code here:
        byte[] a;
        File file;
        try {
            // Tạo file từ đường dẫn
            file = new File(txtPath.getText());

            // Mở FileInputStream để đọc dữ liệu từ file
            FileInputStream fi = new FileInputStream(file);

            // Tạo mảng byte với kích thước dữ liệu trong file
            a = new byte[fi.available()];

            // Đọc dữ liệu từ file vào mảng byte
            fi.read(a);

            // Đóng stream sau khi đọc
            fi.close();

            // Chuyển đổi mảng byte sang chuỗi nhị phân
            String binaryString = new String(a);

            StringBuilder text = new StringBuilder();

            // Đảm bảo chuỗi nhị phân có độ dài là bội số của 8
            if (binaryString.length() % 8 == 0) {
                // Chuyển đổi từ chuỗi nhị phân về dạng ký tự văn bản
                for (int i = 0; i < binaryString.length(); i += 8) {
                    // Lấy mỗi đoạn 8 bit
                    String byteString = binaryString.substring(i, i + 8);

                    // Kiểm tra và chuyển đổi chuỗi nhị phân hợp lệ
                    if (!byteString.isEmpty() && byteString.length() == 8) {
                        try {
                            // Chuyển chuỗi nhị phân thành số nguyên
                            int charCode = Integer.parseInt(byteString, 2);
                            // Chuyển số nguyên thành ký tự và thêm vào chuỗi kết quả
                            text.append((char) charCode);
                        } catch (NumberFormatException e) {
                            System.out.println("Lỗi khi phân tích chuỗi nhị phân: " + byteString);
                            e.printStackTrace();
                        }
                    }
                }
            } else {
                System.out.println("Chuỗi nhị phân không hợp lệ hoặc không đủ 8 bit!");
            }

            // Hiển thị chuỗi văn bản lên JTextField hoặc JTextArea
            txtText.setText(text.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnReadBinaryActionPerformed

    private void btnWriteBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWriteBinaryActionPerformed
        // TODO add your handling code here:
        // Lấy chuỗi từ JTextField
        String text = txtString.getText();
        StringBuilder binaryStringBuilder = new StringBuilder();

        // Chuyển đổi từng ký tự sang mã nhị phân
        for (char c : text.toCharArray()) {
            // Chuyển đổi ký tự thành mã nhị phân 8 bit và nối vào chuỗi
            String binaryString = String.format("%8s", Integer.toBinaryString(c)).replaceAll(" ", "0");
            binaryStringBuilder.append(binaryString);
        }

        // Chuyển đổi chuỗi nhị phân thành mảng byte (nếu bạn chỉ muốn ghi dạng chuỗi nhị phân)
        byte[] byteArray = binaryStringBuilder.toString().getBytes();

        File file;

        try {
            file = new File(txtPath.getText());
            FileOutputStream fileOutputStream = new FileOutputStream(file);

            // Ghi dữ liệu chuỗi nhị phân vào file
            fileOutputStream.write(byteArray);

            // Đóng stream sau khi ghi
            fileOutputStream.close();
            JOptionPane.showMessageDialog(null, "File đã được ghi thành công với chuỗi nhị phân!");

        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnWriteBinaryActionPerformed

    private void btnWriteTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWriteTextActionPerformed
        // TODO add your handling code here:
        try {
            FileWriter fw = new FileWriter(new File(txtPath.getText()));
            fw.write(txtString.getText());
            fw.close();
            JOptionPane.showMessageDialog(null, "File đã được ghi thành công !");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnWriteTextActionPerformed

    private void btnReadTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadTextActionPerformed
        // TODO add your handling code here:
        try {
            FileReader fr = new FileReader(new File(txtPath.getText()));
            StringBuffer sb = new StringBuffer();
            char[] ca = new char[5];
            while (fr.ready()) {
                int len = fr.read(ca);
                sb.append(ca, 0, len);
            }
            fr.close();
            txtText.setText(sb + "");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnReadTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmLab02_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmLab02_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmLab02_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmLab02_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmLab02_2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReadBinary;
    private javax.swing.JButton btnReadText;
    private javax.swing.JButton btnWriteBinary;
    private javax.swing.JButton btnWriteText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtPath;
    private javax.swing.JTextField txtString;
    private javax.swing.JTextArea txtText;
    // End of variables declaration//GEN-END:variables
}
